# This does two things:
#
# 1) Maps our "networking.j2.yaml" to Heat resources.
# 2) Translates our "networks.yaml" into Heat parameters.
#
# This file was modified from the default at:
#   /usr/share/openstack-tripleo-heat-templates/environments/network-environment.j2.yaml
#
# Our change is to use our own "networking.j2.yaml" in "network/config/lab/" instead of the
# hardcoded default of "network/config/single-nic-vlans/". We've also removed misplaced Neutron
# configuration and moved it to "neutron.yaml".
#
# See: https://docs.openstack.org/heat/stein/template_guide/environment.html

#This file is an example of an environment file for defining the isolated
#networks and related parameters.
resource_registry:
  # Network Interface templates to use (these files must exist). You can
  # override these by including one of the net-*.yaml environment files,
  # such as net-bond-with-vlans.yaml, or modifying the list here.
{%- for role in roles %}
  # Port assignments for the {{role.name}}
  OS::TripleO::{{role.name}}::Net::SoftwareConfig:
    ../network/config/lab/{{role.deprecated_nic_config_name|default(role.name.lower() ~ ".yaml")}}
{%- endfor %}

parameter_defaults:
  # This section is where deployment-specific configuration is done
  #
  # NOTE: (Since Rocky)
  # ControlPlaneSubnetCidr: It is no longer a requirement to provide the
  #                         parameter. The attribute is resolved from the
  #                         ctlplane subnet(s).
  # ControlPlaneDefaultRoute: It is no longer a requirement to provide this
  #                           parameter. The attribute is resolved from the
  #                           ctlplane subnet(s).
  # EC2MetadataIp: It is no longer a requirement to provide this parameter. The
  #                attribute is resolved from the ctlplane subnet(s).
  #
{% for network in networks if network.enabled|default(true) %}
  # Customize the IP subnet to match the local environment
{%-     if network.ipv6|default(false) %}
  {{network.name}}NetCidr: '{{network.ipv6_subnet}}'
{%-     else %}
  {{network.name}}NetCidr: '{{network.ip_subnet}}'
{%-     endif %}
  # Customize the IP range to use for static IPs and VIPs
{%-     if network.name == 'External' %}
  # Leave room if the external network is also used for floating IPs
{%-     endif %}
{%-     if network.ipv6|default(false) %}
  {{network.name}}AllocationPools: {{network.ipv6_allocation_pools}}
{%-     else %}
  {{network.name}}AllocationPools: {{network.allocation_pools}}
{%-     endif %}
{%-     if network.ipv6|default(false) and network.gateway_ipv6|default(false) %}
  # Gateway router for routable networks
  {{network.name}}InterfaceDefaultRoute: '{{network.gateway_ipv6}}'
{%-     elif network.gateway_ip|default(false) %}
  # Gateway router for routable networks
  {{network.name}}InterfaceDefaultRoute: '{{network.gateway_ip}}'
{%-     endif %}
{%-     if network.vlan is defined %}
  # Customize the VLAN ID to match the local environment
  {{network.name}}NetworkVlanID: {{network.vlan}}
{%-     endif %}
{%-     if network.routes %}
  # Routes to add to host_routes property of the subnets in neutron.
  {{network.name}}Routes: {{network.routes|default([])}}
{%-     endif %}
{%-     if network.name == 'Tenant' %}
  # MTU of the underlying physical network. Neutron uses this value to
  # calculate MTU for all virtual network components. For flat and VLAN
  # networks, neutron uses this value without modification. For overlay
  # networks such as VXLAN, neutron automatically subtracts the overlay
  # protocol overhead from this value.
  TenantNetPhysnetMtu: {{network.mtu|default('1500')}}
{%-     endif %}
{%      for subnet in network.subnets|default({}) if network.subnets[subnet].enabled|default(true) %}
{%-         if network.ipv6|default(false) %}
  {{network.name}}SubnetCidr_{{subnet}}: {{network.subnets[subnet]['ipv6_subnet']}}
  {{network.name}}AllocationPools_{{subnet}}: {{network.subnets[subnet]['ipv6_allocation_pools']}}
  {{network.name}}InterfaceDefaultRoute_{{subnet}}: {{network.subnets[subnet]['gateway_ipv6']}}
{%-             if network.subnets[subnet][routes_ipv6] %}
  {{network.name}}Routes_{{subnet}}: {{network.subnets[subnet]['routes_ipv6']|default([])}}
{%-             endif %}
{%-         else %}
  {{network.name}}SubnetCidr_{{subnet}}: {{network.subnets[subnet]['ip_subnet']}}
  {{network.name}}AllocationPools_{{subnet}}: {{network.subnets[subnet]['allocation_pools']}}
  {{network.name}}InterfaceDefaultRoute_{{subnet}}: {{network.subnets[subnet]['gateway_ip']}}
{%-             if network.subnets[subnet][routes] %}
  {{network.name}}Routes_{{subnet}}: {{network.subnets[subnet]['routes']|default([])}}
{%-             endif %}
{%-         endif %}
{%-         if network.subnets[subnet]['vlan'] is defined %}
  {{network.name}}NetworkVlanID_{{subnet}}: {{network.subnets[subnet]['vlan']}}
{%-         endif %}
{%      endfor %}
{% endfor %}
