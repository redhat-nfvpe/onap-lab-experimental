RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
RESET='\033[0m'

# Colored messages (blue is the default)
# Examples:
#   m "hello world"
#   m "hello world" $GREEN
function m () {
	local COLOR=${2:-$BLUE}
	echo -e "$COLOR$1$RESET"
}

# Converts the arguments to a command line segment of space-delimited arguments.
# This is done by backslash-escaping special shell characters within each argument, such as:
# spaces, single and double quotes, commas, "$", "*", and "?". Empty arguments become ''.  
function c () {
	local Q=$(printf ' %q' "$@")
	echo "${Q:1}"
}

# Backslash-escapes double quotes in the argument
function eq () {
	echo "$1" | sed 's/"/\\"/g'
}

# Wraps the argument in double-quotes and blackslash-escapes double-quotes 
function q () {
	echo "\"$(eq "$1")\""
}

# Turns a file into a command line segment.
# Ignores empty lines and lines beginning with "#".
# Each other line is appended to the command line. 
function command_line_ini () {
	 < "$1" grep --invert-match '^#\|^$' | tr '\n' ' '
}

# See: https://www.rosehosting.com/blog/generate-password-linux-command-line/#2-Generate-a-strong-password-with-urandom
# For consistency with TripleO we chose a length of 25
function random_password () {
	< /dev/urandom tr --delete --complement A-Za-z0-9 | head --bytes=25
}
