# See: https://docs.openstack.org/heat/stein/template_guide/

heat_template_version: 2018-08-31

description: >-
  Hello World stack

parameters:

  public-network:
    type: string
    label: Public network name
    default: public

resources:

  # Networking

  private-net:
    type: OS::Neutron::Net
    properties:
      name: private

  private-subnet:
    type: OS::Neutron::Subnet
    properties:
      name: private
      network: { get_resource: private-net }
      ip_version: 4
      cidr: 192.0.1.0/24
      gateway_ip: 192.0.1.1 # this is the default: the first address
      allocation_pools:
      - start: 192.0.1.100
        end: 192.0.1.254

  public-router:
    type: OS::Neutron::Router
    properties:
      name: public
      external_gateway_info:
        network: { get_param: public-network }
        enable_snat: true

  public-router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: public-router }
      subnet: { get_resource: private-subnet } # will create a port at "gateway_ip" address

  security-group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: control-plane
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        direction: ingress
        protocol: icmp
      - remote_ip_prefix: 0.0.0.0/0
        direction: ingress
        protocol: tcp
        port_range_min: 22
        port_range_max: 22

  # Exposed as output "private-ip"
  port:
    type: OS::Neutron::Port
    properties:
      name: port
      network: { get_resource: private-net }
      fixed_ips: # required if we want to bind a floating IP to this port
      - subnet: { get_resource: private-subnet }
      security_groups:
      - { get_resource: security-group }

  # Exposed as output "public-ip"
  public-ip:
    type: OS::Neutron::FloatingIP
    properties:
      port_id: { get_resource: port } 
      floating_network: { get_param: public-network }

  # Server

  # Exposed as output "private-key"
  keypair:
    type: OS::Nova::KeyPair
    properties:
      name: hello-world
      save_private_key: true

  server:
    type: OS::Nova::Server
    properties:
      name: server
      flavor: m1.tiny
      image: centos7
      key_name: { get_resource: keypair }
      networks:
      - port: { get_resource: port }

  # Volume

  volume:
    type: OS::Cinder::Volume
    properties:
      size: 5 # GB

  # Default mountpoint is /dev/vdb
  volume-attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: volume }
      instance_uuid: { get_resource: server }

outputs:

  private-key:
    description: Private key
    value: { get_attr: [ keypair, private_key ] }

  private-ip:
    description: Private IP address
    value: { get_attr: [ port, fixed_ips, 0, ip_address ] }

  public-ip:
    description: Public IP address
    value: { get_attr: [ public-ip, floating_ip_address ] }
