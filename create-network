#!/bin/bash
set -e

if [ "$EUID" == 0 ]; then
	echo "Do not run this script as root"
	exit 1
fi

PROJECT=$1
NAME=$2
SUBNET_RANGE=$3

if [ -z "$PROJECT" ] || [ -z "$NAME" ] || [ -z "$SUBNET_RANGE" ]; then
	echo 'Provide project name, network name, and subnet range'
	exit 1
fi

HERE=$(dirname "$(readlink -f "$0")")
. "$HERE/conf/env"

# Create network, subnet, and router
if ! "$HERE/openstack" network list --project "$PROJECT" | grep --quiet --line-regexp --fixed-strings "$PROJECT.$NAME"; then
	echo "Creating network \"$PROJECT.$NAME\"..."
	NETWORK_ID=$("$HERE/openstack" network create "$PROJECT.$NAME" \
		--project "$PROJECT" \
		--provider-network-type vxlan \
		--column id \
		--format value)

	echo "Creating subnet \"$PROJECT.$NAME\"..."
	SUBNET_ID=$("$HERE/openstack" subnet create "$PROJECT.$NAME" \
		--project "$PROJECT" \
		--network "$PROJECT.$NAME" \
		--subnet-range "$SUBNET_RANGE" \
		--column id \
		--format value)

	echo "Setting DNS nameserver on subnet \"$PROJECT.$NAME\"..."
	"$HERE/openstack" subnet set "$PROJECT.$NAME" --dns-nameserver "$DNS_NAMESERVER"

	echo "Creating router \"$PROJECT.$NAME\"..."
	ROUTER_ID=$("$HERE/openstack" router create "$PROJECT.$NAME" \
		--project "$PROJECT" \
		--column id \
		--format value)

	echo "Adding subnet \"$PROJECT.$NAME\" to router \"$PROJECT.$NAME\"..."
	"$HERE/openstack" router add subnet "$ROUTER_ID" "$SUBNET_ID"

	echo "Setting external gateway for router \"$PROJECT.$NAME\"..."
	"$HERE/openstack" router set "$ROUTER_ID" --external-gateway public 
else
	echo "Network \"$PROJECT.$NAME\" already exists"
	exit 1
fi
