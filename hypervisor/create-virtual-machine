#!/bin/bash
set -e

if [ "$EUID" == 0 ]; then
	echo "Do not run this script as root"
	exit 1
fi

# See: https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init/
# See: https://github.com/giovtorres/kvm-install-vm/blob/master/kvm-install-vm
# See: https://cloudinit.readthedocs.io/en/latest/index.html

NAME=$1
DISK_SIZE=$2
BASE=$3
BASE_IMAGE=$4

HERE=$(dirname "$(readlink -f "$0")")
ROOT=$(readlink -f "$HERE/..")
. "$ROOT/configuration/environment"
. "$ROOT/utils/functions"

Q_NAME=$(q "$NAME")
EQ_NAME=$(eq "$NAME")
C_NAME=$(c "$NAME")
EQ_DISK_SIZE=$(eq "$DISK_SIZE")
C_DISK_SIZE=$(c "$DISK_SIZE")
EQ_BASE=$(eq "$BASE")
C_BASE_IMAGE=$(c "$BASE_IMAGE")

PASSWORD=$("$ROOT/utils/get-password" "stack@$NAME")

"$ROOT/utils/ensure-ssh-key-exists" "stack@$NAME"
KEY=$(< "$KEYS_ROOT/stack@$NAME.pub")

VIRT_INSTALL_ARGUMENTS=$(command_line_ini "$ROOT/configuration/libvirt/domains/$NAME/virt-install.arguments" |
	HOME=/home/stack \
	NAME=$EQ_NAME \
	envsubst)

CLOUD_CONFIG=$(cat "$ROOT/configuration/libvirt/domains/$NAME/cloud-config.yaml" | 
	NAME=$EQ_NAME \
	NAMESERVER=$(eq "$NAMESERVER") \
	TIMEZONE=$(eq "$TIMEZONE") \
	PASSWORD=$(eq "$PASSWORD") \
	KEY=$(eq "$KEY") \
	envsubst)

m "[hypervisor-hypervisor] Ensuring keypair for virtual machine \"$NAME\" installed"
"$HERE/rsync" \
	--rsync-path='mkdir --parents keys/ && rsync' \
	"$KEYS_ROOT/stack@$NAME" \
	"$KEYS_ROOT/stack@$NAME.pub" \
	hypervisor-hypervisor:keys/

"$HERE/ssh" -t hypervisor-root "$(cat <<- EOT

	set -e
	CYAN='\033[0;36m'
	RESET='\033[0m'
	function m () { echo -e "\$CYAN\$1\$RESET"; }

	# Protect keys
	chmod --recursive go-rwx /home/hypervisor/keys/

	if virsh domstate $C_NAME 2> /dev/null; then
		m "[hypervisor-root] Virtual machine \"$EQ_NAME\" already exists"
		exit
	fi

	if [ -n "$BASE" ]; then

		# Use base image with cloud-init

		if [ ! -f "/home/stack/libvirt/images/$EQ_NAME.qcow2" ]; then
			if [ ! -f "/home/stack/libvirt/images/$EQ_BASE.qcow2" ]; then
				m "[hypervisor-root] Downloading base image: \"/home/stack/libvirt/images/$EQ_BASE.qcow2\""
				mkdir --parents /home/stack/libvirt/images/
				wget --output-document="/home/stack/libvirt/images/$EQ_BASE.qcow2" $C_BASE_IMAGE
			fi

			m "[hypervisor-root] Creating virtual machine disk image: \"/home/stack/libvirt/images/$EQ_NAME.qcow2\" ($EQ_DISK_SIZE)"
			cp "/home/stack/libvirt/images/$EQ_BASE.qcow2" "/home/stack/libvirt/images/$EQ_NAME.qcow2"
			qemu-img resize "/home/stack/libvirt/images/$EQ_NAME.qcow2" $C_DISK_SIZE
		fi

		if [ ! -f "/home/stack/libvirt/images/$EQ_NAME-cloud-init.iso" ]; then
			m "[hypervisor-root] Creating cloud-init configuration disk image: \"/home/stack/libvirt/images/$EQ_NAME-cloud-init.iso\""
			CLOUD_INIT="/home/stack/libvirt/images/.${EQ_NAME}_cloud-init.yaml"

			echo $(c "$CLOUD_CONFIG") > "\$CLOUD_INIT"

			cloud-localds "/home/stack/libvirt/images/$EQ_NAME-cloud-init.iso" "\$CLOUD_INIT"
		fi

		m "[hypervisor-root] Creating virtual machine \"$EQ_NAME\""
		sudo virt-install \
			$VIRT_INSTALL_ARGUMENTS \
			--name $C_NAME \
			--disk "/home/stack/libvirt/images/$EQ_NAME-cloud-init.iso,device=cdrom"

		m "[hypervisor-root] Ensuring virtual machine \"$EQ_NAME\" will autostart"
		virsh autostart --domain $C_NAME
	
		m "[hypervisor-root] Ejecting cloud-init configuration disk from virtual machine \"$EQ_NAME\""
		virsh change-media $C_NAME hda --eject --config || true

	else

		# Don't use base image

		m "[hypervisor-root] Creating virtual machine disk image: \"/home/stack/libvirt/images/$EQ_NAME.qcow2\" ($EQ_DISK_SIZE)"
		qemu-img create "/home/stack/libvirt/images/$EQ_NAME.qcow2" $C_DISK_SIZE

		m "[hypervisor-root] Creating virtual machine \"$EQ_NAME\""
		sudo virt-install \
			$VIRT_INSTALL_ARGUMENTS \
			--name $C_NAME

		m "[hypervisor-root] Ensuring virtual machine \"$EQ_NAME\" will autostart"
		virsh autostart --domain $C_NAME

	fi

EOT
)"
